'use client';

import React, { useState, useEffect } from 'react';
import { CheckCircle, Download, Calendar, MapPin, Clock, Users, CreditCard, ArrowRight } from 'lucide-react';
import { Button } from '@/components/ui/Button';
import { Card } from '@/components/ui/Card';
import Link from 'next/link';
import { paymentService, type Payment } from '@/services/paymentService';
import { bookingService, type Booking } from '@/services/bookingService';
import { ticketService } from '@/services/ticketService';

interface PaymentSuccessProps {
  payment: Payment;
  booking: Booking;
  onClose?: () => void;
}

const PaymentSuccess: React.FC<PaymentSuccessProps> = ({ payment, booking, onClose }) => {
  const [ticketsGenerated, setTicketsGenerated] = useState(false);

  useEffect(() => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∏–ª–µ—Ç—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    if (payment.status === 'completed' && !ticketsGenerated) {
      generateTickets();
    }
  }, [payment.status, ticketsGenerated]);

  const generateTickets = async () => {
    try {
      await ticketService.generateTicketsFromBooking(booking.id, payment.id);
      setTicketsGenerated(true);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∏–ª–µ—Ç–æ–≤:', error);
    }
  };
  const formatDate = (dateString: string): string => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });
  };

  const formatTime = (dateString: string): string => {
    const date = new Date(dateString);
    return date.toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const handleDownloadReceipt = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —á–µ–∫–∞
    const receiptData = {
      payment_id: payment.id,
      booking_id: booking.id,
      amount: payment.amount,
      date: payment.created_at,
      park: booking.park?.name,
      visit_date: booking.booking_date,
      time_slot: booking.time_slot,
    };

    const dataStr = JSON.stringify(receiptData, null, 2);
    const dataBlob = new Blob([dataStr], { type: 'application/json' });
    const url = URL.createObjectURL(dataBlob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = `receipt_${payment.id.slice(0, 8)}.json`;
    link.click();
    
    URL.revokeObjectURL(url);
  };

  const getProviderName = (provider: string): string => {
    const providers: Record<string, string> = {
      mbank: 'mBank',
      odengi: 'O!–î–µ–Ω—å–≥–∏',
      elcart: '–≠–ª–ö–∞—Ä—Ç',
      optimabank: 'Optima Bank',
      cash: '–ù–∞–ª–∏—á–Ω—ã–µ',
    };
    return providers[provider] || provider;
  };

  const isPaymentCompleted = payment.status === 'completed';

  return (
    <div className="max-w-2xl mx-auto p-6">
      <Card className="p-8">
        {/* –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã */}
        <div className="text-center mb-8">
          {isPaymentCompleted ? (
            <>
              <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <CheckCircle className="w-8 h-8 text-green-600" />
              </div>
              <h2 className="text-2xl font-bold text-green-600 mb-2">
                –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!
              </h2>
              <p className="text-gray-600">
                –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –∏ –æ–ø–ª–∞—á–µ–Ω–æ
              </p>
            </>
          ) : (
            <>
              <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <Clock className="w-8 h-8 text-blue-600" />
              </div>
              <h2 className="text-2xl font-bold text-blue-600 mb-2">
                –ü–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
              </h2>
              <p className="text-gray-600">
                –ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –ø–ª–∞—Ç–µ–∂, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç
              </p>
            </>
          )}
        </div>

        {/* –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞ */}
        <div className="space-y-6">
          <div className="bg-gray-50 border rounded-lg p-4">
            <h3 className="font-medium text-gray-900 mb-3 flex items-center">
              <CreditCard className="w-5 h-5 mr-2 text-sky-600" />
              –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞
            </h3>
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="text-gray-600">–ù–æ–º–µ—Ä –ø–ª–∞—Ç–µ–∂–∞:</span>
                <div className="font-mono font-medium">#{payment.id.slice(0, 8)}</div>
              </div>
              <div>
                <span className="text-gray-600">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</span>
                <div className="font-medium">{getProviderName(payment.provider)}</div>
              </div>
              <div>
                <span className="text-gray-600">–°—É–º–º–∞:</span>
                <div className="font-medium">{paymentService.formatAmount(payment.amount)}</div>
              </div>
              <div>
                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                <div className={`inline-block px-2 py-1 rounded-full text-xs font-medium border ${paymentService.getStatusColor(payment.status)}`}>
                  {paymentService.formatPaymentStatus(payment.status)}
                </div>
              </div>
              {payment.fee_amount > 0 && (
                <div>
                  <span className="text-gray-600">–ö–æ–º–∏—Å—Å–∏—è:</span>
                  <div className="font-medium">{paymentService.formatAmount(payment.fee_amount)}</div>
                </div>
              )}
              <div>
                <span className="text-gray-600">–î–∞—Ç–∞:</span>
                <div className="font-medium">
                  {formatTime(payment.created_at)} {formatDate(payment.created_at)}
                </div>
              </div>
            </div>
          </div>

          {/* –î–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <div className="bg-sky-50 border border-sky-200 rounded-lg p-4">
            <h3 className="font-medium text-sky-900 mb-3 flex items-center">
              <Calendar className="w-5 h-5 mr-2 text-sky-600" />
              –î–µ—Ç–∞–ª–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è
            </h3>
            <div className="space-y-3">
              <div className="flex items-center text-sky-800">
                <MapPin className="w-4 h-4 mr-2" />
                <span className="font-medium">{booking.park?.name}</span>
              </div>
              <div className="flex items-center text-sky-800">
                <Calendar className="w-4 h-4 mr-2" />
                <span>{formatDate(booking.booking_date)}</span>
              </div>
              <div className="flex items-center text-sky-800">
                <Clock className="w-4 h-4 mr-2" />
                <span>{bookingService.formatTimeSlot(booking.time_slot)}</span>
              </div>
              <div className="flex items-center text-sky-800">
                <Users className="w-4 h-4 mr-2" />
                <span>{booking.adult_count} –≤–∑—Ä–æ—Å–ª—ã—Ö + {booking.child_count} –¥–µ—Ç–µ–π</span>
              </div>
            </div>
          </div>

          {/* –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
            <h3 className="font-medium text-yellow-900 mb-2">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="text-sm text-yellow-800 space-y-1">
              <p>‚Ä¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ 15 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ —Å–µ–∞–Ω—Å–∞</p>
              <p>‚Ä¢ –ü—Ä–∏ —Å–µ–±–µ –∏–º–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å</p>
              <p>‚Ä¢ –î–µ—Ç–∏ –¥–æ 12 –ª–µ—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏ –≤–∑—Ä–æ—Å–ª—ã—Ö</p>
              <p>‚Ä¢ –í —Å–ª—É—á–∞–µ –æ–ø–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 30 –º–∏–Ω—É—Ç, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–Ω—É–ª–∏—Ä—É–µ—Ç—Å—è</p>
            </div>
          </div>

          {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–∞—Ä–∫–∞ */}
          {booking.park?.phone_number && (
            <div className="text-center p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-1">
                –í–æ–ø—Ä–æ—Å—ã? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–∞—Ä–∫–æ–º:
              </p>
              <a
                href={`tel:${booking.park.phone_number}`}
                className="text-sky-600 font-medium hover:text-sky-700"
              >
                {booking.park.phone_number}
              </a>
            </div>
          )}

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex flex-col sm:flex-row gap-3 pt-6">
            <Button
              onClick={handleDownloadReceipt}
              variant="secondary"
              className="flex-1"
            >
              <Download className="w-4 h-4 mr-2" />
              –°–∫–∞—á–∞—Ç—å —á–µ–∫
            </Button>

            <Button
              asChild
              className="flex-1 bg-sky-600 hover:bg-sky-700"
            >
              <Link href="/dashboard?tab=tickets">
                –ú–æ–∏ –±–∏–ª–µ—Ç—ã
                <ArrowRight className="w-4 h-4 ml-2" />
              </Link>
            </Button>
          </div>

          {/* SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
          {isPaymentCompleted && (
            <div className="text-center text-sm text-gray-500 pt-4 border-t">
              üì± SMS —Å –¥–µ—Ç–∞–ª—è–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –Ω–æ–º–µ—Ä {booking.contact_phone}
            </div>
          )}

          {onClose && (
            <div className="text-center pt-4">
              <Button
                onClick={onClose}
                variant="ghost"
                className="text-gray-500 hover:text-gray-700"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
            </div>
          )}
        </div>
      </Card>
    </div>
  );
};

export default PaymentSuccess; 
 