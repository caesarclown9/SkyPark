'use client';

import React, { useState } from 'react';
import { QrCode, Download, Share2, Calendar, Clock, MapPin, User, Shield, Star } from 'lucide-react';
import { Button } from '@/components/ui/Button';
import { Card } from '@/components/ui/Card';
import { ticketService, type Ticket } from '@/services/ticketService';
import QRCodeGenerator from './QRCodeGenerator';

interface TicketCardProps {
  ticket: Ticket;
  showQR?: boolean;
  compact?: boolean;
  onShare?: (ticket: Ticket) => void;
  onDownload?: (ticket: Ticket) => void;
}

const TicketCard: React.FC<TicketCardProps> = ({ 
  ticket, 
  showQR = true, 
  compact = false,
  onShare,
  onDownload 
}) => {
  const [showFullQR, setShowFullQR] = useState(false);

  const formatDate = (dateString: string): string => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      weekday: 'long',
      day: '2-digit',
      month: 'long',
      year: 'numeric',
    });
  };

  const formatTime = (dateString: string): string => {
    const date = new Date(dateString);
    return date.toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const handleDownload = () => {
    if (onDownload) {
      onDownload(ticket);
    } else {
      ticketService.downloadTicketAsImage(ticket.id);
    }
  };

  const handleShare = () => {
    if (onShare) {
      onShare(ticket);
    } else {
      // –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ Web Share API
      if (navigator.share) {
        navigator.share({
          title: `–ë–∏–ª–µ—Ç Sky Park #${ticket.ticket_number}`,
          text: `–ë–∏–ª–µ—Ç –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ Sky Park ${formatDate(ticket.visit_date)}`,
          url: window.location.href,
        });
      } else {
        // Fallback - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        navigator.clipboard.writeText(
          `–ë–∏–ª–µ—Ç Sky Park #${ticket.ticket_number} –Ω–∞ ${formatDate(ticket.visit_date)}`
        );
        alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–ª–µ—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
      }
    }
  };

  const isValid = ticketService.isTicketValid(ticket);
  const timeUntilExpiry = ticketService.getTimeUntilExpiry(ticket);

  // –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
  if (compact) {
    return (
      <Card className="p-4 hover:shadow-md transition-shadow">
        <div className="flex items-center space-x-4">
          {/* QR –∫–æ–¥ */}
          {showQR && (
            <div className="flex-shrink-0">
              <QRCodeGenerator
                value={ticket.qr_data}
                size={60}
                className="rounded"
              />
            </div>
          )}

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="flex-1 min-w-0">
            <div className="flex items-center space-x-2 mb-1">
              <span className="text-lg">
                {ticketService.getTicketTypeIcon(ticket.ticket_type)}
              </span>
              <span className="font-bold text-gray-900">#{ticket.ticket_number}</span>
              <span className={`px-2 py-1 rounded-full text-xs font-medium border ${ticketService.getStatusColor(ticket.status)}`}>
                {ticketService.formatTicketStatus(ticket.status)}
              </span>
            </div>
            
            <p className="font-medium text-gray-900 truncate">{ticket.holder_name}</p>
            <p className="text-sm text-gray-600">
              {formatDate(ticket.visit_date)} ‚Ä¢ {ticketService.formatTimeSlot(ticket.time_slot)}
            </p>
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex-shrink-0">
            <Button
              onClick={() => setShowFullQR(true)}
              variant="ghost"
              size="sm"
            >
              <QrCode className="w-4 h-4" />
            </Button>
          </div>
        </div>
      </Card>
    );
  }

  // –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –±–∏–ª–µ—Ç–∞
  return (
    <>
      <Card className="overflow-hidden hover:shadow-lg transition-shadow bg-gradient-to-br from-sky-50 to-white border-sky-200">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–∏–ª–µ—Ç–∞ */}
        <div className="bg-gradient-to-r from-sky-600 to-sky-700 text-white p-6">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center space-x-2 mb-2">
                <span className="text-2xl">üé°</span>
                <h3 className="text-xl font-bold">Sky Park</h3>
              </div>
              <p className="text-sky-100">–î–µ—Ç—Å–∫–∏–π —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä</p>
            </div>
            
            <div className="text-right">
              <div className="text-2xl font-bold">#{ticket.ticket_number}</div>
              <div className={`inline-block px-3 py-1 rounded-full text-xs font-medium border-2 ${
                isValid 
                  ? 'border-green-300 bg-green-100 text-green-800' 
                  : 'border-red-300 bg-red-100 text-red-800'
              }`}>
                {ticketService.formatTicketStatus(ticket.status)}
              </div>
            </div>
          </div>
        </div>

        <div className="p-6">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
            <div className="space-y-4">
              <div className="flex items-center space-x-3">
                <User className="w-5 h-5 text-sky-600" />
                <div>
                  <div className="text-sm text-gray-600">–í–ª–∞–¥–µ–ª–µ—Ü –±–∏–ª–µ—Ç–∞</div>
                  <div className="font-bold text-gray-900">{ticket.holder_name}</div>
                  {ticket.holder_age && (
                    <div className="text-sm text-gray-500">{ticket.holder_age} –ª–µ—Ç</div>
                  )}
                </div>
              </div>

              <div className="flex items-center space-x-3">
                <Calendar className="w-5 h-5 text-sky-600" />
                <div>
                  <div className="text-sm text-gray-600">–î–∞—Ç–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è</div>
                  <div className="font-bold text-gray-900">{formatDate(ticket.visit_date)}</div>
                </div>
              </div>

              <div className="flex items-center space-x-3">
                <Clock className="w-5 h-5 text-sky-600" />
                <div>
                  <div className="text-sm text-gray-600">–í—Ä–µ–º—è</div>
                  <div className="font-bold text-gray-900">
                    {ticketService.formatTimeSlot(ticket.time_slot)}
                  </div>
                </div>
              </div>

              {ticket.gate_number && (
                <div className="flex items-center space-x-3">
                  <MapPin className="w-5 h-5 text-sky-600" />
                  <div>
                    <div className="text-sm text-gray-600">–í—Ö–æ–¥</div>
                    <div className="font-bold text-gray-900">–í–æ—Ä–æ—Ç–∞ {ticket.gate_number}</div>
                  </div>
                </div>
              )}
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - QR –∫–æ–¥ */}
            {showQR && (
              <div className="flex flex-col items-center justify-center">
                <div className="bg-white p-4 rounded-lg border-2 border-gray-200 shadow-sm">
                  <QRCodeGenerator
                    value={ticket.qr_data}
                    size={140}
                    className="rounded"
                  />
                </div>
                <p className="text-xs text-gray-500 mt-2 text-center">
                  –ü–æ–∫–∞–∂–∏—Ç–µ QR-–∫–æ–¥ –Ω–∞ –≤—Ö–æ–¥–µ
                </p>
              </div>
            )}
          </div>

          {/* –¢–∏–ø –±–∏–ª–µ—Ç–∞ –∏ —Ü–µ–Ω–∞ */}
          <div className="bg-gray-50 rounded-lg p-4 mb-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <span className="text-2xl">
                  {ticketService.getTicketTypeIcon(ticket.ticket_type)}
                </span>
                <div>
                  <div className="font-medium text-gray-900">
                    {ticketService.getTicketTypeName(ticket.ticket_type)} –±–∏–ª–µ—Ç
                  </div>
                  <div className="text-sm text-gray-600">
                    {ticket.discount_amount > 0 ? (
                      <>
                        <span className="line-through">{ticket.original_price} —Å–æ–º</span>
                        <span className="ml-2 text-green-600">
                          -{ticket.discount_amount} —Å–æ–º
                        </span>
                      </>
                    ) : (
                      `${ticket.original_price} —Å–æ–º`
                    )}
                  </div>
                </div>
              </div>
              
              <div className="text-right">
                <div className="text-2xl font-bold text-sky-600">
                  {ticket.paid_price} —Å–æ–º
                </div>
                {ticket.discount_reason && (
                  <div className="text-xs text-green-600">{ticket.discount_reason}</div>
                )}
              </div>
            </div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
          {(ticket.meal_included || ticket.parking_included || ticket.special_needs) && (
            <div className="border-t pt-4 mb-6">
              <h4 className="text-sm font-medium text-gray-700 mb-2">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏</h4>
              <div className="space-y-1">
                {ticket.meal_included && (
                  <div className="flex items-center text-sm text-gray-600">
                    <span className="mr-2">üçï</span>
                    –ü–∏—Ç–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ
                  </div>
                )}
                {ticket.parking_included && (
                  <div className="flex items-center text-sm text-gray-600">
                    <span className="mr-2">üöó</span>
                    –ü–∞—Ä–∫–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞
                  </div>
                )}
                {ticket.special_needs && (
                  <div className="flex items-center text-sm text-gray-600">
                    <span className="mr-2">‚ôø</span>
                    {ticket.special_needs}
                  </div>
                )}
              </div>
            </div>
          )}

          {/* –°—Ç–∞—Ç—É—Å –∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å */}
          <div className="bg-gradient-to-r from-sky-50 to-blue-50 rounded-lg p-4 mb-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-2">
                <Shield className="w-5 h-5 text-sky-600" />
                <div>
                  <div className="text-sm font-medium text-gray-900">
                    –°—Ç–∞—Ç—É—Å –±–∏–ª–µ—Ç–∞
                  </div>
                  <div className="text-sm text-gray-600">
                    {isValid ? (
                      <span className="text-green-600">
                        ‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ {timeUntilExpiry}
                      </span>
                    ) : (
                      <span className="text-red-600">
                        ‚ùå {ticketService.formatTicketStatus(ticket.status)}
                      </span>
                    )}
                  </div>
                </div>
              </div>
              
              {ticket.used_at && (
                <div className="text-right text-sm text-gray-600">
                  <div>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω:</div>
                  <div>{formatTime(ticket.used_at)}</div>
                  {ticket.used_gate && <div>–í—Ö–æ–¥: {ticket.used_gate}</div>}
                </div>
              )}
            </div>
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex flex-wrap gap-3">
            <Button
              onClick={() => setShowFullQR(true)}
              className="flex-1 sm:flex-none bg-sky-600 hover:bg-sky-700"
            >
              <QrCode className="w-4 h-4 mr-2" />
              QR-–∫–æ–¥
            </Button>
            
            <Button
              onClick={handleDownload}
              variant="secondary"
              className="flex-1 sm:flex-none"
            >
              <Download className="w-4 h-4 mr-2" />
              –°–∫–∞—á–∞—Ç—å
            </Button>
            
            <Button
              onClick={handleShare}
              variant="ghost"
              className="flex-1 sm:flex-none"
            >
              <Share2 className="w-4 h-4 mr-2" />
              –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </Button>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
          <div className="mt-6 pt-4 border-t text-center">
            <div className="text-xs text-gray-500 space-y-1">
              <div>–ö–æ–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {ticket.validation_code}</div>
              <div>–í—ã–¥–∞–Ω: {ticketService.formatDateTime(ticket.issued_at)}</div>
              <div className="flex items-center justify-center space-x-1">
                <Shield className="w-3 h-3" />
                <span>–ó–∞—â–∏—â–µ–Ω–æ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –ø–æ–¥–ø–∏—Å—å—é</span>
              </div>
            </div>
          </div>
        </div>
      </Card>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –±–æ–ª—å—à–∏–º QR-–∫–æ–¥–æ–º */}
      {showFullQR && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg p-8 max-w-md w-full">
            <div className="text-center mb-6">
              <h3 className="text-xl font-bold text-gray-900 mb-2">
                QR-–∫–æ–¥ –±–∏–ª–µ—Ç–∞
              </h3>
              <p className="text-gray-600">
                –ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ –≤—Ö–æ–¥–µ –≤ –ø–∞—Ä–∫
              </p>
            </div>
            
            <div className="flex justify-center mb-6">
              <div className="bg-white p-4 rounded-lg border-2 border-gray-200">
                <QRCodeGenerator
                  value={ticket.qr_data}
                  size={200}
                  className="rounded"
                />
              </div>
            </div>
            
            <div className="text-center text-sm text-gray-600 mb-6">
              <div className="font-medium">#{ticket.ticket_number}</div>
              <div>{ticket.holder_name}</div>
              <div>{formatDate(ticket.visit_date)}</div>
            </div>
            
            <div className="flex space-x-3">
              <Button
                onClick={() => setShowFullQR(false)}
                variant="secondary"
                className="flex-1"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
              <Button
                onClick={handleDownload}
                className="flex-1 bg-sky-600 hover:bg-sky-700"
              >
                <Download className="w-4 h-4 mr-2" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default TicketCard; 
 