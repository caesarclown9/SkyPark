'use client';

import { useState, useEffect, useCallback } from 'react';
import { ParkList } from '@/components/parks/ParkList';
import { RecommendedParks } from '@/components/parks/RecommendedParks';
import PageWrapper from '@/components/layout/PageWrapper';
import { parkService } from '@/services/parkService';
import { Park } from '@skypark/shared/types';
import { MapPin, Search, Filter, Star, Clock, Shield } from 'lucide-react';
import { useAsyncData } from '@/hooks';

export default function ParksPage() {
  // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const loadParks = useCallback(async () => {
    return parkService.getParks({ 
      limit: 1000, // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–∞—Ä–∫–∏
      status: 'active'
    });
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
  const { 
    data: allParksResponse, 
    loading, 
    error,
    refetch 
  } = useAsyncData(loadParks, { dependencies: [] });

  const allParks = allParksResponse?.success ? allParksResponse.data : [];
  const featuredParks = allParks
    .sort((a, b) => b.rating - a.rating)
    .slice(0, 6);

  const headerFeatures = (
    <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-8">
      <div className="skypark-card-compact text-center">
        <MapPin className="w-8 h-8 text-purple-600 mx-auto mb-3" />
        <h3 className="font-bold text-gray-900 mb-1">15+ –õ–æ–∫–∞—Ü–∏–π</h3>
        <p className="text-sm text-gray-600">–ü–∞—Ä–∫–∏ –ø–æ –≤—Å–µ–º—É –ë–∏—à–∫–µ–∫—É</p>
      </div>
      <div className="skypark-card-compact text-center">
        <Star className="w-8 h-8 text-pink-600 mx-auto mb-3" />
        <h3 className="font-bold text-gray-900 mb-1">–í—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥</h3>
        <p className="text-sm text-gray-600">–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π</p>
      </div>
      <div className="skypark-card-compact text-center">
        <Shield className="w-8 h-8 text-blue-600 mx-auto mb-3" />
        <h3 className="font-bold text-gray-900 mb-1">100% –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
        <p className="text-sm text-gray-600">–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã</p>
      </div>
    </div>
  );

  if (loading) {
    return (
      <PageWrapper title="–î–µ—Ç—Å–∫–∏–µ –ø–∞—Ä–∫–∏ –ë–∏—à–∫–µ–∫–∞" subtitle="–ó–∞–≥—Ä—É–∂–∞–µ–º –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è –≤–∞—à–∏—Ö –º–∞–ª—ã—à–µ–π...">
        <div className="space-y-12">
          {/* Skeleton –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –ø–∞—Ä–∫–æ–≤ */}
          <div className="skypark-card-highlight">
            <div className="text-center mb-8">
              <div className="h-8 bg-gray-200 rounded w-64 mx-auto mb-2 animate-pulse"></div>
              <div className="h-4 bg-gray-200 rounded w-96 mx-auto animate-pulse"></div>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {Array.from({ length: 3 }).map((_, i) => (
                <div key={i} className="bg-white rounded-lg border p-6 animate-pulse">
                  <div className="h-48 bg-gray-200 rounded-lg mb-4"></div>
                  <div className="space-y-2">
                    <div className="h-4 bg-gray-200 rounded w-3/4"></div>
                    <div className="h-3 bg-gray-200 rounded w-full"></div>
                    <div className="h-3 bg-gray-200 rounded w-5/6"></div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Skeleton –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä–∫–æ–≤ */}
          <div className="skypark-card">
            <div className="text-center mb-8">
              <div className="h-8 bg-gray-200 rounded w-64 mx-auto mb-2 animate-pulse"></div>
              <div className="h-4 bg-gray-200 rounded w-80 mx-auto animate-pulse"></div>
            </div>
            <div className="space-y-6">
              <div className="p-6 border rounded-lg">
                <div className="space-y-4">
                  <div className="h-10 bg-gray-200 rounded animate-pulse"></div>
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    {Array.from({ length: 4 }).map((_, i) => (
                      <div key={i} className="h-20 bg-gray-200 rounded animate-pulse"></div>
                    ))}
                  </div>
                </div>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {Array.from({ length: 6 }).map((_, i) => (
                  <div key={i} className="bg-white rounded-lg border p-6 animate-pulse">
                    <div className="h-48 bg-gray-200 rounded-lg mb-4"></div>
                    <div className="space-y-2">
                      <div className="h-4 bg-gray-200 rounded w-3/4"></div>
                      <div className="h-3 bg-gray-200 rounded w-full"></div>
                      <div className="h-3 bg-gray-200 rounded w-5/6"></div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </PageWrapper>
    );
  }

  if (error) {
    return (
      <PageWrapper title="–î–µ—Ç—Å–∫–∏–µ –ø–∞—Ä–∫–∏ –ë–∏—à–∫–µ–∫–∞" subtitle="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ">
        <div className="flex items-center justify-center h-64">
          <div className="text-center">
            <div className="text-red-500 mb-4">
              <svg className="w-16 h-16 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
              </svg>
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
            <p className="text-gray-600 mb-4">{error}</p>
            <button
              onClick={refetch}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </PageWrapper>
    );
  }

  return (
    <PageWrapper 
      title="–î–µ—Ç—Å–∫–∏–µ –ø–∞—Ä–∫–∏ –ë–∏—à–∫–µ–∫–∞" 
      subtitle="üé™ –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ —Å –¥–µ—Ç—å–º–∏. –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–æ–Ω—ã, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –∂–¥—É—Ç –≤–∞—Å!"
      headerContent={headerFeatures}
    >
      {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–∞—Ä–∫–∏ */}
      {featuredParks.length > 0 && (
        <div className="skypark-card-highlight mb-12">
          <div className="text-center mb-8">
            <h2 className="text-2xl font-bold text-skypark-gradient mb-2">
              ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–∞—Ä–∫–∏
            </h2>
            <p className="text-gray-600">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –¥–µ—Ç—Å–∫–∏–µ —Ü–µ–Ω—Ç—Ä—ã —Å –≤—ã—Å–æ–∫–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏</p>
          </div>
          <RecommendedParks 
            parks={featuredParks}
            title=""
            subtitle=""
            loading={false}
            error=""
          />
        </div>
      )}

      {/* –í—Å–µ –ø–∞—Ä–∫–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ */}
      <div className="skypark-card">
        <div className="text-center mb-8">
          <h2 className="text-2xl font-bold text-skypark-gradient mb-2">
            üó∫Ô∏è –í—Å–µ –ø–∞—Ä–∫–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π
          </h2>
          <p className="text-gray-600">–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</p>
        </div>
        
        <ParkList 
          initialParks={allParks}
          showFilters={true}
          showSearch={true}
          showDistanceFilter={true}
          itemsPerPage={12}
        />
      </div>
    </PageWrapper>
  );
} 