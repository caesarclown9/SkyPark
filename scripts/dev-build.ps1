# Sky Park - Build Project
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ production —Ä–µ–∂–∏–º–µ

param(
    [switch]$Frontend,
    [switch]$Backend,
    [switch]$Clean,
    [switch]$Test,
    [string]$Environment = "production"
)

# –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã —Ñ–ª–∞–≥–∏, —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ
if (-not ($Frontend -or $Backend)) {
    $Frontend = $true
    $Backend = $true
}

Write-Host "üèóÔ∏è Sky Park - –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Cyan
Write-Host "Environment: $Environment" -ForegroundColor Gray
Write-Host "=" * 50

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
if ($Clean) {
    Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫..." -ForegroundColor Yellow
    
    $cleanDirs = @(
        "apps/web/.next",
        "apps/web/out",
        "apps/api/bin",
        "apps/api/dist",
        "dist",
        "build"
    )
    
    foreach ($dir in $cleanDirs) {
        if (Test-Path $dir) {
            Remove-Item $dir -Recurse -Force
            Write-Host "   –£–¥–∞–ª–µ–Ω: $dir" -ForegroundColor Gray
        }
    }
    
    Write-Host "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow

if ($Environment -eq "production") {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è production
    $requiredEnvVars = @(
        "DATABASE_URL",
        "JWT_SECRET",
        "NEXT_PUBLIC_API_URL"
    )
    
    $missingVars = @()
    foreach ($var in $requiredEnvVars) {
        if (-not (Get-ChildItem Env: | Where-Object Name -eq $var)) {
            $missingVars += $var
        }
    }
    
    if ($missingVars.Count -gt 0) {
        Write-Host "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor Red
        $missingVars | ForEach-Object { Write-Host "   - $_" -ForegroundColor Red }
        Write-Host "   –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .env —Ñ–∞–π–ª—ã" -ForegroundColor Gray
        exit 1
    }
}

Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞" -ForegroundColor Green

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
if ($Test) {
    Write-Host "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
    
    # Frontend —Ç–µ—Å—Ç—ã
    if ($Frontend) {
        Write-Host "   Frontend —Ç–µ—Å—Ç—ã..." -ForegroundColor Gray
        Set-Location "apps/web"
        try {
            npm run test:ci
            Write-Host "   ‚úÖ Frontend —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå Frontend —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã" -ForegroundColor Red
            Set-Location "../.."
            exit 1
        }
        Set-Location "../.."
    }
    
    # Backend —Ç–µ—Å—Ç—ã
    if ($Backend) {
        Write-Host "   Backend —Ç–µ—Å—Ç—ã..." -ForegroundColor Gray
        Set-Location "apps/api"
        try {
            go test ./... -v
            Write-Host "   ‚úÖ Backend —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå Backend —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã" -ForegroundColor Red
            Set-Location "../.."
            exit 1
        }
        Set-Location "../.."
    }
}

# –°–±–æ—Ä–∫–∞ Backend
if ($Backend) {
    Write-Host "üèóÔ∏è –°–±–æ—Ä–∫–∞ Backend..." -ForegroundColor Yellow
    
    Set-Location "apps/api"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤
    if (-not (Test-Path "bin")) {
        New-Item -ItemType Directory -Path "bin" | Out-Null
    }
    
    try {
        # –°–±–æ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞
        Write-Host "   –°–±–æ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Gray
        $env:GOOS = "windows"
        $env:GOARCH = "amd64"
        $env:CGO_ENABLED = "0"
        
        go build -ldflags "-w -s" -o "bin/skypark-api.exe" "./cmd/api"
        
        # –°–±–æ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç –º–∏–≥—Ä–∞—Ü–∏–π
        Write-Host "   –°–±–æ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–π..." -ForegroundColor Gray
        go build -ldflags "-w -s" -o "bin/skypark-migrate.exe" "./cmd/migrate"
        
        # –°–±–æ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏
        Write-Host "   –°–±–æ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç—ã seed..." -ForegroundColor Gray
        go build -ldflags "-w -s" -o "bin/skypark-seed.exe" "./cmd/seed"
        
        Write-Host "‚úÖ Backend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞—Ö
        Get-ChildItem "bin/*.exe" | ForEach-Object {
            $size = [math]::Round($_.Length / 1MB, 2)
            Write-Host "   üì¶ $($_.Name): ${size} MB" -ForegroundColor Gray
        }
        
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Backend" -ForegroundColor Red
        Write-Host $_.Exception.Message -ForegroundColor Red
        Set-Location "../.."
        exit 1
    }
    
    Set-Location "../.."
}

# –°–±–æ—Ä–∫–∞ Frontend
if ($Frontend) {
    Write-Host "üé® –°–±–æ—Ä–∫–∞ Frontend..." -ForegroundColor Yellow
    
    Set-Location "apps/web"
    
    try {
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if (-not (Test-Path "node_modules")) {
            Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Gray
            npm ci
        }
        
        # –°–±–æ—Ä–∫–∞ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        Write-Host "   –°–±–æ—Ä–∫–∞ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Gray
        $env:NODE_ENV = $Environment
        
        if ($Environment -eq "production") {
            npm run build
        } else {
            npm run build:dev
        }
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±–æ—Ä–∫–∏
        if (Test-Path ".next") {
            $buildSize = (Get-ChildItem ".next" -Recurse | Measure-Object -Property Length -Sum).Sum
            $buildSizeMB = [math]::Round($buildSize / 1MB, 2)
            Write-Host "   üì¶ –†–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏: ${buildSizeMB} MB" -ForegroundColor Gray
        }
        
        Write-Host "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Frontend" -ForegroundColor Red
        Write-Host $_.Exception.Message -ForegroundColor Red
        Set-Location "../.."
        exit 1
    }
    
    Set-Location "../.."
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è (–µ—Å–ª–∏ production)
if ($Environment -eq "production") {
    Write-Host "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è..." -ForegroundColor Yellow
    
    $deployDir = "deploy-$(Get-Date -Format 'yyyy-MM-dd-HHmm')"
    New-Item -ItemType Directory -Path $deployDir | Out-Null
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if ($Frontend -and (Test-Path "apps/web/.next")) {
        Copy-Item "apps/web/.next" "$deployDir/web" -Recurse
        Copy-Item "apps/web/public" "$deployDir/web/public" -Recurse -ErrorAction SilentlyContinue
        Copy-Item "apps/web/package.json" "$deployDir/web/" -ErrorAction SilentlyContinue
    }
    
    if ($Backend -and (Test-Path "apps/api/bin")) {
        Copy-Item "apps/api/bin" "$deployDir/api" -Recurse
        Copy-Item "apps/api/migrations" "$deployDir/api/migrations" -Recurse -ErrorAction SilentlyContinue
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
    try {
        Compress-Archive -Path "$deployDir/*" -DestinationPath "$deployDir.zip" -Force
        Remove-Item $deployDir -Recurse -Force
        
        $archiveSize = [math]::Round((Get-Item "$deployDir.zip").Length / 1MB, 2)
        Write-Host "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $deployDir.zip (${archiveSize} MB)" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
Write-Host ""

if ($Backend) {
    Write-Host "Backend –±–∏–Ω–∞—Ä–Ω–∏–∫–∏:" -ForegroundColor Cyan
    Write-Host "  apps/api/bin/skypark-api.exe     - –û—Å–Ω–æ–≤–Ω–æ–π API —Å–µ—Ä–≤–µ—Ä" -ForegroundColor White
    Write-Host "  apps/api/bin/skypark-migrate.exe - –£—Ç–∏–ª–∏—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π" -ForegroundColor White
    Write-Host "  apps/api/bin/skypark-seed.exe    - –£—Ç–∏–ª–∏—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏" -ForegroundColor White
}

if ($Frontend) {
    Write-Host "Frontend —Å–±–æ—Ä–∫–∞:" -ForegroundColor Cyan
    Write-Host "  apps/web/.next/  - –°–æ–±—Ä–∞–Ω–Ω–æ–µ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" -ForegroundColor White
}

Write-Host ""
Write-Host "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ production:" -ForegroundColor Cyan
Write-Host "  # Backend" -ForegroundColor Gray
Write-Host "  cd apps/api && ./bin/skypark-api.exe" -ForegroundColor White
Write-Host "  # Frontend" -ForegroundColor Gray
Write-Host "  cd apps/web && npm start" -ForegroundColor White 
 