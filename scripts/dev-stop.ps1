# Sky Park - Stop Development Environment
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

param(
    [switch]$KeepServices,
    [switch]$Force
)

Write-Host "üõë Sky Park - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" -ForegroundColor Cyan
Write-Host "=" * 50

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (Next.js)
Write-Host "üé® –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Frontend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
try {
    $nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object {
        $_.MainWindowTitle -like "*Next.js*" -or 
        $_.CommandLine -like "*next dev*" -or
        $_.CommandLine -like "*apps/web*"
    }
    
    if ($nodeProcesses) {
        $nodeProcesses | ForEach-Object {
            Write-Host "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞: $($_.Name) (PID: $($_.Id))" -ForegroundColor Gray
            if ($Force) {
                Stop-Process -Id $_.Id -Force
            } else {
                Stop-Process -Id $_.Id
            }
        }
        Write-Host "‚úÖ Frontend –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è Frontend –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Frontend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" -ForegroundColor Yellow
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (API —Å–µ—Ä–≤–µ—Ä)
Write-Host "üèóÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
try {
    $goProcesses = Get-Process -Name "main" -ErrorAction SilentlyContinue | Where-Object {
        $_.CommandLine -like "*apps/api*" -or
        $_.CommandLine -like "*cmd/api/main.go*"
    }
    
    if (-not $goProcesses) {
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –∏–º–µ–Ω–∏ go.exe
        $goProcesses = Get-Process -Name "go" -ErrorAction SilentlyContinue | Where-Object {
            $_.CommandLine -like "*run*" -and $_.CommandLine -like "*api*"
        }
    }
    
    if ($goProcesses) {
        $goProcesses | ForEach-Object {
            Write-Host "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞: $($_.Name) (PID: $($_.Id))" -ForegroundColor Gray
            if ($Force) {
                Stop-Process -Id $_.Id -Force
            } else {
                Stop-Process -Id $_.Id
            }
        }
        Write-Host "‚úÖ Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" -ForegroundColor Yellow
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 3000 –∏ 8080
Write-Host "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Yellow

$ports = @(3000, 8080)
foreach ($port in $ports) {
    try {
        $connections = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
        if ($connections) {
            foreach ($conn in $connections) {
                $process = Get-Process -Id $conn.OwningProcess -ErrorAction SilentlyContinue
                if ($process) {
                    Write-Host "   –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ $port (–ø—Ä–æ—Ü–µ—Å—Å: $($process.Name), PID: $($process.Id))" -ForegroundColor Gray
                    if ($Force) {
                        Stop-Process -Id $process.Id -Force
                    } else {
                        Stop-Process -Id $process.Id
                    }
                }
            }
        }
    } catch {
        Write-Host "   –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω" -ForegroundColor Gray
    }
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker services (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if (-not $KeepServices) {
    Write-Host "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
    
    if (Test-Path "docker-compose.yml") {
        try {
            docker-compose stop
            Write-Host "‚úÖ Docker services –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
        } catch {
            Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker services" -ForegroundColor Yellow
        }
    }
} else {
    Write-Host "üê≥ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∑–∞–ø—É—â–µ–Ω–Ω—ã–º–∏" -ForegroundColor Yellow
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Yellow

$tempDirs = @(
    "apps/web/.next",
    "apps/api/tmp",
    "node_modules/.cache"
)

foreach ($dir in $tempDirs) {
    if (Test-Path $dir) {
        try {
            Remove-Item $dir -Recurse -Force -ErrorAction SilentlyContinue
            Write-Host "   –£–¥–∞–ª–µ–Ω: $dir" -ForegroundColor Gray
        } catch {
            Write-Host "   –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: $dir" -ForegroundColor Yellow
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã
Write-Host "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Yellow
Start-Sleep -Seconds 2

$ports = @(3000, 8080)
$stillBusy = @()

foreach ($port in $ports) {
    try {
        $connections = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
        if ($connections) {
            $stillBusy += $port
        } else {
            Write-Host "   ‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω" -ForegroundColor Green
        }
    } catch {
        Write-Host "   ‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω" -ForegroundColor Green
    }
}

if ($stillBusy.Count -gt 0) {
    Write-Host ""
    Write-Host "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ä—Ç—ã –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç—ã: $($stillBusy -join ', ')" -ForegroundColor Yellow
    Write-Host "   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å —Ñ–ª–∞–≥–æ–º -Force –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:" -ForegroundColor Gray
    Write-Host "   .\scripts\dev-stop.ps1 -Force" -ForegroundColor White
} else {
    Write-Host ""
    Write-Host "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!" -ForegroundColor Green
}

Write-Host ""
Write-Host "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor Cyan
Write-Host "  .\scripts\dev-start.ps1" -ForegroundColor White
Write-Host ""

if ($KeepServices) {
    Write-Host "üí° –î–ª—è –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (–≤–∫–ª—é—á–∞—è Docker):" -ForegroundColor Cyan
    Write-Host "  .\scripts\dev-stop.ps1" -ForegroundColor White
    Write-Host ""
} 
 